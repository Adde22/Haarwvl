import timeit
setup_statements="""
from  scipy import all
from  pylab import all
import math 
import numpy as np
import scipy.misc as sm


def HaarWavelet(array):
    haararray=np.zeros((array.shape[0],array.shape[0]))
    for i in range(haararray.shape[0]):
        haararray[int(i/2),i]=(np.sqrt(2))/2
        haararray[-int(i/2)-1,-i-1]=-(np.sqrt(2))/2
    for i in range(haararray.shape[0]//2):
        haararray[-i-1,-2*i-1]=(np.sqrt(2))/2
    b=haararray@array
    haararray1=np.zeros((array.shape[1],array.shape[1]))
    for i in range(haararray1.shape[1]):
        haararray1[int(i/2),i]=(np.sqrt(2))/2
        haararray1[-int(i/2)-1,-i-1]=-(np.sqrt(2))/2
    for i in range(haararray1.shape[1]//2):
        haararray1[-i-1,-2*i-1]=(np.sqrt(2))/2
    t=np.transpose(haararray1)
    e=b@t
    sm.imsave('compimage.jpg',e)
    
def Nomatrixcompress(array):
    Non=zeros((array.shape[0],array.shape[1]))
    for n in range((array.shape[0])//2-1):
        for m in range((array.shape[1])//2-1):
            Non[n,m]=(array[n*2,m*2]+array[n*2,2*m+1]+array[2*n+1,2*m]+array[2*n+1,2*m+1])/4
            Non[n,array.shape[1]//2+m]=(-(array[2*n,2*m])+array[2*n,2*m+1]-array[2*n+1,2*m]+array[2*n+1,2*m+1])/4
            Non[array.shape[0]//2+n,m]=(-(array[2*n,2*m])-array[2*n,2*m+1]+array[2*n+1,2*m]+array[2*n+1,2*m+1])/4
            Non[array.shape[0]//2+n,array.shape[1]//2+m]=(-array[2*n,2*m]+array[2*n,2*m+1]+array[2*n+1,2*m]-array[2*n+1,2*m+1])/4
    sm.imsave('nomatriximage.jpg',Non)
    
def Converttoarray(x):
    array=sm.imread(x , True)
    if array.shape[0]%2==1:
        array=array[:-1,:]
        if array.shape[1]%2==1:
            array=array[:,:-1]
    elif array.shape[1]%2==1:
        array=array[:,:-1]
    return array

"""
experiment1=timeit.Timer(stmt="HaarWavelet(Converttoarray('BWGroup.jpg'))",setup=setup_statements)
t1=experiment1.repeat(1,5)
print(min(t1)/5)
experiment2=timeit.Timer(stmt="HaarWavelet(Converttoarray('BWGroup.jpg'))",setup=setup_statements)
t2=experiment1.repeat(1,5)
print(min(t2)/5)
